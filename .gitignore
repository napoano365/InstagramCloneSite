# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore Byebug command history file.
.byebug_history

# Ignore .envfile
#（レビューをお願いする際は、環境変数もお伝えしなければ動作確認できないのでは、とも考えたのですが、不要でしょうか…。
#またはgitでのバージョン管理云々と、pushされるされないは挙動が別なのでしょうか？）
/.env

# Ignore heroku folder
/heroku/

# Ignore vendor/bundler/ folder
/vendor/bundler/

#今回、coffeescriptのコードを特に追記していないためgitignoreしました。
#application.js は マニュフェストファイルで、[require bootstrap-sprockets]など追記したため、管理下に残しました。
/app/assets/javascripts/*.coffee

# custom .scssにスタイルに関するコードをまとめて記載しているため、それ以外のファイルをgitignoreしました。
/app/assets/stylesheets/
!/app/assets/stylesheets/custom.scss

#ファイル名にハッシュ値がついている以下ディレクトリのファイルは
#herokuへのデプロイ時に発生した「Precompiling assets failed.」というエラーの調査に合わせ、ローカルで
#「$ RAILS_ENV=production bin/rails assets:precompile」を実行した際に作成されたものと考え、gitignroeしました。
/public/assets/

#以下のディレクトリのファイルは「Rails Server」で動作検証時にアップロードした写真ファイルのためgitignoreしました。
/public/uploads/post/

#テストに関するファイルは、今回理解が及ばず全くコードをかけていないのですが、
#レビュー依頼時はこのようなファイルも、バージョン管理から除外するべきでしょうか？
#/test/